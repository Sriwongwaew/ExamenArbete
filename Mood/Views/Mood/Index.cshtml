@model Mood.ViewModels.IndexViewModel

@{
    ViewBag.Title = "Home page";
}


<head>
</head>
<body onload="init();">
    <h1>Take a snapshot of the current video stream</h1>
    Click on the Start WebCam button.
    <p>
        <button onclick="startWebcam();">Start WebCam</button>
        <button onclick="stopWebcam();">Stop WebCam</button>
        <button onclick="snapshot();">Take Snapshot</button>
    </p>
    <video onclick="snapshot(this);" width=400 height=400 id="video" controls autoplay></video>
    <p>

        Screenshots :
    <p>
        <canvas id="myCanvas" width="400" height="300"></canvas>
        <button onclick="convert();"></button>

    </p>



    @*<form method="post" enctype="multipart/form-data" asp-controller="UploadFiles" asp-action="Index">
            <div class="form-group">
                <div class="col-md-10">
                    <p>Upload one or more files using this form:</p>
                    <input type="file" name="file"/>
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-10">
                    <input type="submit" value="Upload" />
                </div>
            </div>
        </form>*@


    <form method="post" enctype="multipart/form-data" asp-controller="UploadPic" asp-action="Index" >
        <div id="test2"></div>


        <div class="form-group">
            <div class="col-md-10">
                <input type="submit" value="Upload" />
            </div>
        </div>
    </form>

    @*<form method="post" enctype="multipart/form-data" asp-controller="UploadFiles" asp-action="Index">
        <div class="form-group">
            <div class="col-md-10">
                <a id="test1"></a>
                <input id="" type="file" name="file" style="width:20000px;" value="" />
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-10">
                <input type="submit" value="Upload" />
            </div>
        </div>
    </form>

    <input name="pic" type="text"/>*@

</body>





<script>
    //--------------------
    // GET USER MEDIA CODE
    //--------------------
    navigator.getUserMedia = (navigator.getUserMedia ||
        navigator.webkitGetUserMedia ||
        navigator.mozGetUserMedia ||
        navigator.msGetUserMedia);

    var video;
    var webcamStream;

    function startWebcam() {
        if (navigator.getUserMedia) {
            navigator.getUserMedia(

                // constraints
                {
                    video: true,
                    audio: false
                },

                // successCallback
                function (localMediaStream) {
                    video = document.querySelector('video');
                    video.src = window.URL.createObjectURL(localMediaStream);
                    webcamStream = localMediaStream;
                },

                // errorCallback
                function (err) {
                    console.log("The following error occured: " + err);
                }
            );
        } else {
            console.log("getUserMedia not supported");
        }
    }
    function convert() {
        let pic = document.getElementById("myCanvas");
        convertCanvasToImage(pic);
    }

    function stopWebcam() {
        webcamStream.stop();
    }
    //---------------------
    // TAKE A SNAPSHOT CODE
    //---------------------
    var canvas, ctx;

    function init() {
        // Get the canvas and obtain a context for
        // drawing in it
        canvas = document.getElementById("myCanvas");
        ctx = canvas.getContext('2d');
    }

    function snapshot() {
        // Draws current image from the video element into the canvas
        ctx.drawImage(video, 0, 0, canvas.width, canvas.height);
        //convertCanvasToImage(canvas)
    }

    function convertCanvasToImage(canvas) {
        var url = canvas.toDataURL("image/png");
        //document.getElementById("test1").innerHTML = `<img name="file" src="${image.src}" />`;


        document.getElementById('test2').innerHTML = `<input value="${url}" name="pic" type="text"/>`;


    }



    function dataURItoBlob(dataURI, type) {
        // convert base64 to raw binary data held in a string
        var byteString = atob(dataURI.split(',')[1]);

        // separate out the mime component
        var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0]

        // write the bytes of the string to an ArrayBuffer
        var ab = new ArrayBuffer(byteString.length);
        var ia = new Uint8Array(ab);
        for (var i = 0; i < byteString.length; i++) {
            ia[i] = byteString.charCodeAt(i);
        }

        // write the ArrayBuffer to a blob, and you're done
        var bb = new Blob([ab], { type: type });
        return bb;
    }

</script>
